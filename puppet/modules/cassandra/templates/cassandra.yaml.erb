<%-
require "facter"
require "yaml"

default_config_file = File.join(File.dirname(__FILE__), "..", "files", "cassandra.yaml")

overrides = {
  "cluster_name" => Facter.value('cassandra_cluster_name'),
  "num_tokens" => 256,
  "max_hints_delivery_threads" => 8,
  "authenticator" => "PasswordAuthenticator",
  "authorizer" => "CassandraAuthorizer",
  "partitioner" => "org.apache.cassandra.dht.Murmur3Partitioner",
  "data_file_directories" => [
    "/mnt/lib/cassandra/data",
  ],
  "commitlog_directory" => "/mnt/lib/cassandra/commitlog",
  "saved_caches_directory" => "/mnt/lib/cassandra/saved_caches",
  "rpc_address" => "0.0.0.0",
  "seed_provider" => [
    {
      "parameters" => [
        { "seeds" => Facter.value('cassandra_seeds_list').join(",") },
      ],
      "class_name" => "org.apache.cassandra.locator.SimpleSeedProvider",
    },
  ],
  "commitlog_total_space_in_mb" => 2048,
  "memtable_flush_writers" => Facter.value('processors')['count'],
  "trickle_fsync" => true,
  "trickle_fsync_interval_in_kb" => 4096,
  "listen_address" => Facter.value("ec2_local_ipv4"),
  "broadcast_rpc_address" => Facter.value('ec2_local_ipv4'),
  "rpc_server_type" => "hsha",
  "rpc_max_threads" => 2048,
  "incremental_backups" => true,
  "concurrent_compactors" => Facter.value('processors')['count'],
  "endpoint_snitch" => "Ec2MultiRegionSnitch",
}

# if this is a seed node then set the broadcast_address to the public_ipv4 for the
# Ec2Snitch/Ec2MultiRegionSnitch to pick it up
if Facter.value("cassandra_seed")
  overrides["broadcast_rpc_address"] = Facter.value("ec2_public_ipv4")
end

config = {}
# Load the Cassandra default config
config = YAML.load(File.read(default_config_file))
# Merge in the custom values
config.merge!(overrides)
-%>
<%= config.to_yaml %>
